// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoboAPI.Data.Context;

#nullable disable

namespace RoboAPI.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.18");

            modelBuilder.Entity("RoboAPI.Domain.Entities.AcaoBracoCotoveloEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AcaoBracoCotovelo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5665),
                            Descricao = "Em Repouso"
                        },
                        new
                        {
                            Id = 2L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5669),
                            Descricao = "Levemente Contraído"
                        },
                        new
                        {
                            Id = 3L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5669),
                            Descricao = "Contraído"
                        },
                        new
                        {
                            Id = 4L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5670),
                            Descricao = "Fortemente Contraído"
                        });
                });

            modelBuilder.Entity("RoboAPI.Domain.Entities.AcaoBracoPulsoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AcaoBracoPulso", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5777),
                            Descricao = "Rotação para -90°"
                        },
                        new
                        {
                            Id = 2L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5778),
                            Descricao = "Rotação para -45°"
                        },
                        new
                        {
                            Id = 3L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5778),
                            Descricao = "Em Repouso"
                        },
                        new
                        {
                            Id = 4L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5779),
                            Descricao = "Rotação para 45°"
                        },
                        new
                        {
                            Id = 5L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5779),
                            Descricao = "Rotação para 90°"
                        },
                        new
                        {
                            Id = 6L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5780),
                            Descricao = "Rotação para 135°"
                        },
                        new
                        {
                            Id = 7L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5780),
                            Descricao = "Rotação para 180°"
                        });
                });

            modelBuilder.Entity("RoboAPI.Domain.Entities.AcaoCabecaInclinacaoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AcaoCabecaInclinacao", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5790),
                            Descricao = "Para Cima"
                        },
                        new
                        {
                            Id = 2L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5791),
                            Descricao = "Em Repouso"
                        },
                        new
                        {
                            Id = 3L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5791),
                            Descricao = "Para Baixo"
                        });
                });

            modelBuilder.Entity("RoboAPI.Domain.Entities.AcaoCabecaRotacaoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AcaoCabecaRotacao", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5798),
                            Descricao = "Rotação -90°"
                        },
                        new
                        {
                            Id = 2L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5799),
                            Descricao = "Rotação -45°"
                        },
                        new
                        {
                            Id = 3L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5800),
                            Descricao = "Em Repouso"
                        },
                        new
                        {
                            Id = 4L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5800),
                            Descricao = "Rotação 45°"
                        },
                        new
                        {
                            Id = 5L,
                            DataCriacao = new DateTime(2023, 6, 18, 20, 35, 4, 293, DateTimeKind.Utc).AddTicks(5801),
                            Descricao = "Rotação 90°"
                        });
                });

            modelBuilder.Entity("RoboAPI.Domain.Entities.RoboEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CabecaInclinacao")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CabecaRotacao")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CotoveloDireito")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CotoveloEsquerdo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<long>("PulsoDireito")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PulsoEsquerdo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Robo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CabecaInclinacao = 2L,
                            CabecaRotacao = 3L,
                            CotoveloDireito = 1L,
                            CotoveloEsquerdo = 1L,
                            PulsoDireito = 3L,
                            PulsoEsquerdo = 3L
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
